version: "3.8"
services:
  auth:
    image: daytrader-auth
    environment:
      - USERNAME=${DB_USERNAME}
      - PASSWORD=${PASSWORD}
      - HOST=${HOST}
      - POSTGRES_PORT=${DOCKER_PORT}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
    networks:
      - day_trader_network
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure

  transaction:
    image: daytrader-transaction
    environment:
      - USERNAME=${DB_USERNAME}
      - PASSWORD=${PASSWORD}
      - HOST=${HOST}
      - POSTGRES_PORT=${DOCKER_PORT}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
    networks:
      - day_trader_network
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure

  database:
    image: daytrader-database
    environment:
      - USERNAME=${DB_USERNAME}
      - PASSWORD=${PASSWORD}
      - HOST=${HOST}
      - POSTGRES_PORT=${DOCKER_PORT}
      - DB_NAME=${DB_NAME}
    volumes:
      - ./:/app
    working_dir: /app
    networks:
      - day_trader_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PORT=${DOCKER_PORT}
    ports:
      - ${HOST_PORT}:${DOCKER_PORT}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - day_trader_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  matching-engine:
    image: daytrader-matching-engine
    environment:
      - USERNAME=${DB_USERNAME}
      - PASSWORD=${PASSWORD}
      - HOST=${HOST}
      - POSTGRES_PORT=${DOCKER_PORT}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
    networks:
      - day_trader_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  api-gateway:
    image: daytrader-api-gateway
    container_name: api-gateway
    ports:
      - ${API_GATEWAY_PORT}:${API_GATEWAY_PORT}
    networks:
      - day_trader_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: daytrader-frontend
    container_name: frontend
    environment:
      - VITE_API_URL=${VITE_API_URL}
    ports:
      - ${FE_PORT}:${FE_PORT}
    networks:
      - day_trader_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

volumes:
  db_data:

networks:
  day_trader_network:
    driver: overlay
