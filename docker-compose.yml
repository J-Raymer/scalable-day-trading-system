version: '3.8'
services:
  auth:
    build:
      context: .
      dockerfile: ./authentication/Dockerfile
    depends_on:
      - database
    environment:
      - USERNAME=${USERNAME}
      - PASSWORD=${PASSWORD}
      - HOST=${HOST}
      - POSTGRES_PORT=${DOCKER_PORT}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
    networks:
      - day_trader_network

  transaction:
    build:
      context: .
      dockerfile: transaction/Dockerfile
    depends_on:
      - database
    environment:
      - USERNAME=${USERNAME}
      - PASSWORD=${PASSWORD}
      - HOST=${HOST}
      - POSTGRES_PORT=${DOCKER_PORT}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
    networks:
      - day_trader_network

  database:
    build:
      context: database
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    environment:
      - USERNAME=${USERNAME}
      - PASSWORD=${PASSWORD}
      - HOST=${HOST}
      - POSTGRES_PORT=${DOCKER_PORT}
      - DB_NAME=${DB_NAME}
    volumes:
      - ./:/app
    working_dir: /app
    command: python3 -m database.app
    networks:
      - day_trader_network

  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${USERNAME}
      - POSTGRES_PASSWORD=${PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PORT=${DOCKER_PORT}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - day_trader_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  matching-engine:
    build:
      context: .
      dockerfile: ./matching-engine/Dockerfile
    depends_on:
      - database
    environment:
      - USERNAME=${USERNAME}
      - PASSWORD=${PASSWORD}
      - HOST=${HOST}
    networks:
        - day_trader_network

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    depends_on:
      - auth
      - transaction
      - matching-engine
    ports:
      - ${API_GATEWAY_PORT}:${API_GATEWAY_PORT}
    networks:
      - day_trader_network

volumes:
  db_data:

networks:
  day_trader_network:
    driver: bridge
